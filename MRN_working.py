import pandas as pd
from rapidfuzz import fuzz
import unicodedata

# –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É Excel
file_path = r'C:\Users\Home\Desktop\MRN 07(–≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ).xlsx'

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –æ–±–æ—Ö –∞—Ä–∫—É—à—ñ–≤
search_df = pd.read_excel(file_path, sheet_name='Search', dtype=str, header=0)
data_df = pd.read_excel(file_path, sheet_name='DATA', dtype=str, header=0)

# –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–π–≤—ñ –ø—Ä–æ–±—ñ–ª–∏ —É –Ω–∞–∑–≤–∞—Ö –∫–æ–ª–æ–Ω–æ–∫
search_df.columns = search_df.columns.str.strip()
data_df.columns = data_df.columns.str.strip()

# –í–∏–≤–æ–¥–∏–º–æ —Å–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫, —â–æ–± –∑–Ω–∞—Ç–∏ —ó—Ö–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫
print("üîç –ö–æ–ª–æ–Ω–∫–∏ —É Search:", list(enumerate(search_df.columns)))
print("üîç –ö–æ–ª–æ–Ω–∫–∏ —É DATA:", list(enumerate(data_df.columns)))

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
def clean_text(text):
    if pd.isna(text):
        return ""
    text = str(text).strip().lower()
    text = unicodedata.normalize('NFKD', text)
    text = ''.join(c for c in text if not unicodedata.combining(c))
    return text

# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –Ω–æ–º–µ—Ä—ñ–≤ –∫–æ–ª–æ–Ω–æ–∫
nr_przesylki_col = 0  # –ö–æ–ª–æ–Ω–∫–∞ Nr_przesylki –≤ Search
nr26_lp_col = 0       # –ö–æ–ª–æ–Ω–∫–∞ Nr26 (LP) —É DATA
opis_towaru_search_col = 7  # –ö–æ–ª–æ–Ω–∫–∞ Opis_towaru —É Search
opis_towaru_data_col = 3    # –ö–æ–ª–æ–Ω–∫–∞ Opis Towaru —É DATA
nr_star_col = 11  # –ö–æ–ª–æ–Ω–∫–∞ Nr* —É Search
mrn_search_col = 12  # –ö–æ–ª–æ–Ω–∫–∞ MRN —É Search
mrn_data_col = 1  # –ö–æ–ª–æ–Ω–∫–∞ MRN —É DATA
nr_data_col = 2  # –ö–æ–ª–æ–Ω–∫–∞ Nr —É DATA

# –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç—É —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö
search_df.iloc[:, nr_przesylki_col] = search_df.iloc[:, nr_przesylki_col].apply(clean_text)
data_df.iloc[:, nr26_lp_col] = data_df.iloc[:, nr26_lp_col].apply(clean_text)
search_df.iloc[:, opis_towaru_search_col] = search_df.iloc[:, opis_towaru_search_col].apply(clean_text)
data_df.iloc[:, opis_towaru_data_col] = data_df.iloc[:, opis_towaru_data_col].apply(clean_text)

# –ó–∞–º—ñ–Ω—é—î–º–æ NaN –Ω–∞ –ø–æ—Ä–æ–∂–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —É Nr* —ñ MRN
search_df.iloc[:, nr_star_col] = search_df.iloc[:, nr_star_col].replace({'#N/D': "", pd.NA: ""}).astype(str)
search_df.iloc[:, mrn_search_col] = search_df.iloc[:, mrn_search_col].replace({'#N/D': "", pd.NA: ""}).astype(str)
data_df.iloc[:, mrn_data_col] = data_df.iloc[:, mrn_data_col].replace({'#N/D': "", pd.NA: ""}).astype(str)

# –ü—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –≤—Å—ñ—Ö —Ä—è–¥–∫–∞—Ö Search, –¥–µ Nr* = 0
for index, search_row in search_df.iterrows():
    if str(search_row.iloc[nr_star_col]).strip() not in ["0", "", "nan"]:
        continue

    # –ü–æ—à—É–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤ —É DATA –∑–∞ Nr_przesylki —Ç–∞ Nr26 (LP)
    matching_rows = data_df[data_df.iloc[:, nr26_lp_col] == search_row.iloc[nr_przesylki_col]]

    # –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–±—ñ–≥—ñ–≤, –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    if matching_rows.empty:
        continue

    # –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –ø–æ MRN (–∑–∞–º—ñ–Ω—é—î–º–æ NaN –Ω–∞ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫)
    search_mrn = search_row.iloc[mrn_search_col] if pd.notna(search_row.iloc[mrn_search_col]) else ""
    matching_rows.iloc[:, mrn_data_col] = matching_rows.iloc[:, mrn_data_col].fillna("")
    matching_rows = matching_rows[matching_rows.iloc[:, mrn_data_col] == search_mrn]

    # –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–±—ñ–≥—ñ–≤, –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    if matching_rows.empty:
        continue

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∞—Å—Ç–∫–æ–≤–æ—ó —Å—Ö–æ–∂–æ—Å—Ç—ñ –æ–ø–∏—Å—É
    for _, match_row in matching_rows.iterrows():
        similarity = fuzz.partial_ratio(search_row.iloc[opis_towaru_search_col], match_row.iloc[opis_towaru_data_col])
        
        # –Ø–∫—â–æ —Å—Ö–æ–∂—ñ—Å—Ç—å –±—ñ–ª—å—à–µ 70%, –æ–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ Nr*
        if similarity > 70:
            search_df.at[index, search_df.columns[nr_star_col]] = str(match_row.iloc[nr_data_col]).strip() if pd.notna(match_row.iloc[nr_data_col]) else "0"

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ —Ñ–∞–π–ª—É
output_path = r'C:\Users\Home\Desktop\newone.xlsx'
search_df.to_excel(output_path, index=False)

print(f"‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ! –û–Ω–æ–≤–ª–µ–Ω–∏–π —Ñ–∞–π–ª –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {output_path}")
